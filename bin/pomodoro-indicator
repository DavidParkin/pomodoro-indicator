#!/usr/bin/env python
# -*- coding:utf-8 -*-

#
# Copyright 2011 malev.com.ar
#
# Author: Marcos Vanetta <marcosvanetta@gmail.com>
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of either or both of the following licenses:
#
# 1) the GNU Lesser General Public License version 3, as published by the
# Free Software Foundation; and/or
# 2) the GNU Lesser General Public License version 2.1, as published by
# the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranties of
# MERCHANTABILITY, SATISFACTORY QUALITY or FITNESS FOR A PARTICULAR
# PURPOSE.  See the applicable version of the GNU Lesser General Public
# License for more details.
#
# You should have received a copy of both the GNU Lesser General Public
# License version 3 and version 2.1 along with this program.  If not, see
# <http://www.gnu.org/licenses/>
#

# ICONS
# http://www.softicons.com/free-icons/food-drinks-icons/veggies-icons-by-icon-icon/tomato-icon

import sys
import os
import argparse
# this will be replaced at install time

INSTALLED_BASE_DIR = "@ INSTALLED_BASE_DIR @"

# get the replaced-at-install-time name if exists, or the project one
if os.path.exists(INSTALLED_BASE_DIR):
    project_basedir = INSTALLED_BASE_DIR
else:
    project_basedir = os.path.abspath(os.path.dirname(os.path.dirname(
        os.path.realpath(sys.argv[0]))))

if project_basedir not in sys.path:
    sys.path.insert(0, project_basedir)

from pomodoro import visual
parser = argparse.ArgumentParser(description="Start pomodoro style "
                                 "timer")
parser.add_argument('--work', dest='work', type=int, default=25,
                    help="Work time in minutes")
parser.add_argument('--short', default=5, dest='short', type=int,
                    help="Short break in minutes")
parser.add_argument('--long', default=15, dest='long', type=int,
                    help="Long break in minutes")
parser.add_argument('--start', action='store_true',
                    help="Start timer immediately")
parser.add_argument('--pause', action='store_true',
                    help="Pause and require confirmation before rest or work")
parser.add_argument('--debug', action='store_true',
                    help="Debug mode - uses test taskwarrior file")
args = parser.parse_args()
print (args)


indicator = visual.PomodoroIndicator(args.work, args.short, args.long,
                                     args.start, args.pause, args.debug)
indicator.main()
